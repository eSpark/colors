module ES.UI.Color exposing (Color, black, white, transparent, familyName, <%= colors_hash.keys.join ", " %>)

-- <%= GENERATED_BLURB %>

import Color


type alias Color =
    Color.Color


black : Color
black =
    Color.rgb 0.0 0.0 0.0


white : Color
white =
    Color.rgb 1.0 1.0 1.0


transparent : Color
transparent =
    Color.rgba 0.0 0.0 0.0 0.0


<% colors_hash.each do |family, shades| %>
<%= as_elm_name(family) %> =
  <% shades.each_with_index do |(shade, hex), i| %>
    <% sep = i == 0 ? "{" : "," %>
    <% rgb = RGB.from_hex(hex) %>
    <%= sep %> <%= as_elm_name(shade) %> = Color.rgb <%= rgb.join_intensity(' ') %> -- <%= hex %>
  <% end %>
  }
<% end %>


familyName : Color -> String
familyName color =
  let
    { r, g, b } =
      Color.toRgba color
  in
  case ( r, g, b ) of
<% colors_hash.each do |family, shades| %>
  <% shades.each_with_index do |(shade, hex), i| %>
    <% rgb = RGB.from_hex(hex) %>
    (<%= rgb.join_intensity(", ") %>) ->
      "<%= family %>"
  <% end %>
<% end %>

    _ ->
      "unknown"
